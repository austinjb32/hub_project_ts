type User{
    _id:ID
    email:String!
    name:String!
    password:String
    bio:String
    status:String
    posts:[Post]
    imageUrl:String
    isAdmin:Boolean
    createdAt:String
    updatedAt:String
    followers:Int,
    following:Int,
    lastActivity:String
}

type AuthData{
    token:String!
    refreshToken:String
    userId:String!
}

type Activity{
    _id:ID
    user:ID!
    track:String!
}

input UserInputData{
    email:String!
    name:String!
    password:String!
}




extend type Query{
login(email:String!, password:String!): AuthData!
viewUser(userID:ID!):User!
getUserById(userId:ID!):User
}

extend type Mutation{
    createUser(userInput:UserInputData!):User!
}