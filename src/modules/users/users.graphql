type User{
    _id:ID
    email:String!
    name:String!
    password:String
    bio:String
    status:String
    posts(
    limit:Int
    offset:Int
    search:String
    sort:String
    filter:String
    ):[Post]
    imageUrl:String
    isAdmin:Boolean
    createdAt:String
    updatedAt:String
    followers:Int,
    following:Int,
    lastActivity:String
}

type AuthData{
    token:String!
    refreshToken:String
    userId:String!
}

type Activity{
    _id:ID
    user:ID!
    track:String!
}

input UserInputData{
    email:String
    name:String
    bio:String
    status:String
    imageUrl:String
    isAdmin:Boolean
}

input UserCreateData{
    email:String!
    name:String!
    password:String!
}



extend type Query{
viewUserById(userID:ID!):User!
user(search:String,sort:JSON,offset:Int,filter:JSON,limit:Int):[User]
users(search:String,sort:JSON,offset:Int,filter:JSON,limit:Int):[User]
}

extend type Mutation{
    updateUser(userID:ID!,userInfoData:UserInputData):User!
    deleteUser(userID:ID!):JSON
}
